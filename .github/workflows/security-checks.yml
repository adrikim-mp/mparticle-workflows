name: "Static analysis checks for security vulnerabilities"
on:
  workflow_call:
  pull_request: # TODO
    types: [opened, reopened, synchronize, edited, ready_for_review, review_requested, assigned ] #
jobs:
  security-lint:
    name: "Determine which checks to run and set environmental variables"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Determine which Semgrep config(s) to use"
        run: |
          REPO_NAME=${{ github.event.repository.name }}

          if [[ $REPO_NAME =~ "/android/" ]]; then
              IS_MOBILE="true"
              SEMGREP_RULES="p/java p/kotlin p/javascript p/bash p/yaml"

          elif [[ $REPO_NAME =~ "/apple/" ]]; then
              IS_MOBILE="true"
              SEMGREP_RULES="p/ci p/javascript p/ruby p/bash p/yaml"

          elif [[ $REPO_NAME =~ "/web/" || $REPO_NAME =~ "/node/" ]]; then
              IS_MOBILE="false"
              SEMGREP_RULES="p/javascript p/typescript"

          else
              IS_MOBILE="false"
              SEMGREP_RULES="auto"
          fi

          echo "IS_MOBILE=$IS_MOBILE" >> $GITHUB_ENV
          echo "SEMGREP_RULES=$SEMGREP_RULES" >> $GITHUB_ENV

          echo "IS_MOBILE=$IS_MOBILE and SEMGREP_RULES=$SEMGREP_RULES"

  run-semgrep:
    name: "Run Semgrep to find vulnerabilities and security antipatterns"
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    if: (github.actor != 'dependabot[bot]')  # skip for permissions issues for dependabot-opened PR's
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Run Semgrep"
        run: "semgrep ci"
        env:
          SEMGREP_RULES: ${{ env.SEMGREP_RULES }}

  run-mobsfscan:
    name: "Run mobsfscan to find Android/iOS vulnerabilities and misconfigurations"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Run mobsfscan"
        if: env.IS_MOBILE == 'true'
        uses: MobSF/mobsfscan@main
        with:
          args: '. --sonarqube'
