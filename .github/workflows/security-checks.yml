name: "Static analysis checks for security vulnerabilities"
on:
  workflow_call:
  pull_request: # REMOVE
    types: [opened, reopened, synchronize, edited, ready_for_review, review_requested, assigned ]
jobs:
  set-scan-configs:
    name: "Determine which checks to run and set environmental variables"
    runs-on: ubuntu-latest
    outputs:
      IS_MOBILE: ${{ steps.set-mobsfscan.outputs.test }}
      SEMGREP_RULES: ${{ steps.set-semgrep.outputs.test }}
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v2

      - name: "Determine which Semgrep config(s) to use"
        id: set-semgrep
        run: |
          REPO_NAME=${{ github.event.repository.name }}

          if [[ $REPO_NAME =~ "/android/" ]]; then
              SEMGREP_RULES="p/java p/kotlin p/javascript p/bash p/yaml"
          elif [[ $REPO_NAME =~ "/apple/" ]]; then
              SEMGREP_RULES="p/ci p/javascript p/ruby p/bash p/yaml"
          elif [[ $REPO_NAME =~ "/web/" || $REPO_NAME =~ "/node/" ]]; then
              SEMGREP_RULES="p/javascript p/typescript"
          else
              SEMGREP_RULES="auto"
          fi

          echo "::set-output name=IS_MOBILE::$SEMGREP_RULES"
          echo "Setting SEMGREP_RULES to: $SEMGREP_RULES"

      - name: "Enable mobsfscan if this is a mobile repo"
        id: set-mobsfscan
        run: |
          REPO_NAME=${{ github.event.repository.name }}

          if [[ $REPO_NAME =~ "/android/" || $REPO_NAME =~ "/apple/" ]]; then
              IS_MOBILE="true"
          else
              IS_MOBILE="false"
          fi

          echo "::set-output name=IS_MOBILE::$IS_MOBILE"
          echo "Setting IS_MOBILE to: $IS_MOBILE"

  run-semgrep:
    name: "Run Semgrep to find vulnerabilities and security antipatterns"
    needs: set-scan-configs
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    if:
      # skip for permissions issues for dependabot-opened PR's
      (github.actor != 'dependabot[bot]')
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "test"
        run: "echo SEMGREP_RULES=${{ needs.set-scan-configs.outputs.SEMGREP_RULES }}"

      - name: "Run Semgrep"
        run: "semgrep ci"
        env:
          SEMGREP_RULES: ${{ needs.set-scan-configs.outputs.SEMGREP_RULES }}

  run-mobsfscan:
    name: "Run mobsfscan to find Android/iOS vulnerabilities and misconfigurations"
    needs: set-scan-configs
    runs-on: ubuntu-latest
    if:
      # skip for permissions issues for dependabot-opened PR's
      (github.actor != 'dependabot[bot]' && ${{ needs.set-scan-configs.outputs.IS_MOBILE }} == "true")
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Run mobsfscan"
        if: env.IS_MOBILE == 'true'
        uses: MobSF/mobsfscan@main
        with:
          args: '. --sonarqube'
